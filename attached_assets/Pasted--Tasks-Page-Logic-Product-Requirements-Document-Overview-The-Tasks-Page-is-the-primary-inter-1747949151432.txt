# Tasks Page Logic - Product Requirements Document

## Overview

The Tasks Page is the primary interface where users interact with their daily wellness tasks within their 63-day program journey. This PRD defines the complete logic for task visibility, interaction permissions, day progression, and unlocking mechanisms.

## Core Logic Principles

### 1. Day-Based Task Organization
- Each program day (1-63) has a specific set of tasks assigned from the task catalog
- Tasks are organized by program type (Beginner, Intermediate, Advanced)
- Each day contains "dailyCore" tasks and optional "weekdayTasks"
- Task assignment is predetermined and follows a structured progression

### 2. Sequential Day Unlocking
- Users can only interact with (complete/skip) tasks for unlocked days
- Day unlocking follows strict sequential logic
- Next day only unlocks when ALL tasks of current day are either completed OR skipped
- Users cannot skip ahead to future days without completing previous days

## Task Viewing and Navigation Logic

### Day Navigation Interface
**Current Day Display**
- Show "Day X / 63" prominently at top of interface
- Display program name (e.g., "Beginner Program")
- Show formatted date for the current program day being viewed

**Navigation Controls**
- Previous Day Button: Navigate backward through completed days
  - Disabled when viewing Day 1
  - Always allows viewing previous days regardless of completion status
- Next Day Button: Navigate forward through available days
  - Disabled when at the furthest unlocked day
  - Only allows navigation to unlocked days
- "Go to Today" Button: Jump to current active day
  - Calculates effective current day based on calendar progression and completion status
  - Resets user to their actual current position in the program

**Day Status Indicators**
- Visual indication of day completion status:
  - Completed days (all tasks completed/skipped)
  - Current active day (can interact with tasks)
  - Locked future days (cannot interact)
- Lock icon or visual cue for days that cannot be accessed

### Task Visibility Rules
**All Days Viewable**
- Users can view tasks for any day in their program (1-63)
- Future day tasks are visible but clearly marked as locked/unavailable
- Past day tasks show their completion history

**Task Information Display**
- Task title and subtitle
- Category badge (Sleep, Movement, Nutrition, Recovery, Mindfulness)
- Duration estimate in minutes
- Difficulty level (1-3 scale)
- Completion status (active, completed, skipped)
- Streak counter for recurring tasks

## Task Interaction Logic

### Completion Permission Rules
**Current Day Only Interaction**
- Users can only complete or skip tasks for their current unlocked day
- Previous day tasks are locked from further modification
- Future day tasks are completely locked until unlocked

**Previous Day Validation**
- Before allowing any task interaction, system validates:
  - All tasks from previous day are either completed OR skipped
  - No tasks remain in "active" state from previous days
  - If validation fails, show error message: "You need to complete or skip all tasks from previous days first"

**Task State Changes**
- Completing a task sets it to "completed" and removes "skipped" status
- Skipping a task sets it to "skipped" and removes "completed" status
- Tasks can be toggled between active/completed states only
- Skipped tasks cannot be toggled back to active (intentional design choice)

### Day Progression Logic
**Automatic Day Advancement**
- Monitor task completion status in real-time
- When all tasks for current day become completed OR skipped:
  - Automatically advance to next day (if available)
  - Reset user navigation to show new current day
  - Unlock next day's tasks for interaction

**Manual vs Automatic Progression**
- Track whether user has manually navigated to a specific day
- If user is on "today's" day, auto-advance when tasks complete
- If user is viewing historical day, do not auto-advance
- Provide "Go to Today" option to return to current active day

**Program Completion**
- When Day 63 is completed, user remains on Day 63
- No further day advancement occurs
- All program content remains accessible for review

## Task Organization and Display

### Three-Panel Task Layout
**Active Tasks Panel ("To Do")**
- Shows tasks that are neither completed nor skipped
- Primary focus area where users take action
- Tasks displayed as interactive cards with completion/skip buttons
- Count of remaining active tasks

**Completed Tasks Panel ("Done")**
- Shows tasks marked as completed for the current day
- Read-only display with completion timestamps
- Visual celebration elements for completed tasks
- Option to view completion streaks

**Skipped Tasks Panel ("Skipped")**
- Shows tasks marked as skipped for the current day
- Read-only display with skip timestamps
- No option to un-skip tasks (prevents gaming the system)
- Optional skip reason display if collected

### Task Interaction States
**Unlocked Day Tasks**
- Full interaction available (complete/skip buttons active)
- Real-time status updates
- Haptic feedback on interactions
- Immediate visual state changes

**Locked Day Tasks**
- Visual indication of locked state (grayed out, locked icon)
- Buttons disabled with clear messaging
- Tooltip or message explaining why locked
- Preview of task content to build anticipation

## Day Calculation and Progression

### Current Day Determination
**Multi-Factor Calculation**
- Calendar days since program start date
- Total days with at least one completed task
- Sequential day unlocking validation
- User's furthest progressed day

**Effective Day Logic**
- Use greater of: calendar days elapsed OR days with completed tasks
- Cap at maximum program length (63 days)
- Validate sequential completion requirements
- Handle edge cases (program restarts, date changes)

**User Manual Navigation Tracking**
- Flag when user manually navigates to specific day
- Preserve manual selection until user chooses "Go to Today"
- Prevent auto-advancement when user is browsing historical days
- Reset manual flag when advancing through task completion

### Unlocking Validation
**Previous Day Completion Check**
- Validate ALL tasks from previous day are handled (completed OR skipped)
- Count expected tasks vs actual logged task states
- Ensure no "active" tasks remain from previous days
- Handle missing task data gracefully

**Forward Progress Scanning**
- Check if user has completed days beyond their current calendar day
- Allow access to any day where all previous days are complete
- Enable "catching up" scenarios where user completes multiple days
- Maintain chronological progression requirements

## Error Handling and Edge Cases

### Data Integrity
**Missing Task Data**
- Handle cases where program data is incomplete
- Graceful fallback when task catalog is missing entries
- Validation of day templates vs available tasks
- Error logging for debugging program data issues

**State Synchronization**
- Ensure task completion state stays synchronized
- Handle conflicts between local and stored state
- Prevent duplicate task entries for same day
- Validate date formatting consistency

### User Experience Edge Cases
**Program Type Changes**
- Handle mid-program switches between Beginner/Intermediate/Advanced
- Recalculate day progression with new program structure
- Preserve completed task history across program changes
- Validate unlocked days with new program requirements

**Date/Time Issues**
- Handle timezone changes and daylight saving time
- Manage day transitions at midnight
- Account for user traveling across time zones
- Prevent date-based progression bugs

**Completion State Recovery**
- Handle app crashes during task completion
- Recover partial completion states
- Prevent loss of progress during state transitions
- Backup critical progression data

## Feedback and Visual Cues

### Immediate Feedback
**Task Completion**
- Instant visual state change (checkmark, color change)
- Haptic feedback for tactile confirmation
- Animation showing task moving to completed section
- Progress bar updates reflecting completion

**Day Advancement**
- Clear notification when day advances
- Visual celebration of day completion
- Progress indicator showing program advancement
- Next day preview to build momentum

### Progress Indicators
**Daily Progress**
- Real-time completion percentage for current day
- Visual progress bar showing task completion ratio
- Count indicators (e.g., "3 of 5 tasks completed")
- Time-based progress estimates

**Program Progress**
- Overall program completion percentage
- Days completed vs total program length
- Phase progression indicators (Phase 1, 2, 3)
- Milestone celebration at key intervals

## Success Criteria

### User Engagement Metrics
- Daily task completion rates by program type
- Task skip rates and patterns
- Day advancement consistency
- User retention through sequential days

### System Performance
- Task state synchronization accuracy
- Day progression calculation reliability
- Error rate in completion tracking
- User satisfaction with progression logic

### Behavioral Outcomes
- Sequential day completion adherence
- Task completion consistency over time
- Program completion rates
- User progression through difficulty levels
